using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;

namespace NotificationsService.Services
{
    [ApiController]
    [Route("health")]
    public class HealthController : ControllerBase
    {
        [HttpGet]
        public IActionResult Get() => Ok("Healthy");
    }

    [ApiController]
    [Route("api/[controller]")]
    public class PrController : ControllerBase
    {
        private readonly PrService _prService;

        public PrController(PrService prService)
        {
            _prService = prService;
        }

        [HttpGet]
        public IActionResult GetOpenPrs()
        {
            var prs = _prService.GetAllPrs();
            return Ok(prs);
        }

        // 1. Get PR Details (already assumed)
        [HttpGet("details")]
        public IActionResult GetDetails([FromQuery] int id)
        {
            // TODO: Replace with real logic
            var detail = new
            {
                id = id,
                title = $"Pull Request #{id} Title Example",
                status = (id % 2 == 0) ? "Open" : "Closed",
                author = "John Doe",
                date = "2024-04-28"
            };

            return Ok(detail);
        }

        // 2. Get PR Review text
        [HttpGet("review")]
        public IActionResult GetReview([FromQuery] int prNumber)
        {
            // TODO: Replace with real PR review generation
            string mockReview = $"This is an autogenerated review for PR #{prNumber}. It looks good overall but could use minor improvements.";

            return Ok(mockReview);
        }

        // 3. POST feedback for thumbs up/down
        [HttpPost("feedback")]
        public IActionResult PostFeedback([FromBody] FeedbackRequest request)
        {
            // You could log/store this feedback if needed
            Console.WriteLine($"Received feedback: PR#{request.PrNumber}, Vote: {request.Vote}");

            return Ok(new { message = "Feedback received" });
        }

        // 4. POST action decision (Approve or Request Changes)
        [HttpPost("decision")]
        public IActionResult PostDecision([FromBody] DecisionRequest request)
        {
            // You could process/store this action if needed
            Console.WriteLine($"Received decision: PR#{request.PrNumber}, Decision: {request.Decision}");

            return Ok(new { message = "Decision received" });
        }
    }

    // Request DTOs
    public class FeedbackRequest
    {
        public int PrNumber { get; set; }
        public string Vote { get; set; } // \"up\" or \"down\"
    }

    public class DecisionRequest
    {
        public int PrNumber { get; set; }
        public string Decision { get; set; } // \"Approve\" or \"Request Changes\"
    }
}


